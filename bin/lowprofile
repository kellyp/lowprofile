#! /bin/bash


lowprofile () {
PROFILE=""

COMMAND=""
while (( $# )); do
  case "$1" in
    -p|--profile)
      PROFILE=$2
      shift 2
      ;;
    --) # end argument parsing
      shift
      break
      ;;
    -*|--*=) # unsupported flags
      echo "Error: Unsupported flag $1" >&2
      exit 1
      ;;
    *) # preserve positional arguments
      COMMAND="$1"
      shift
      ;;
  esac
done

if [[ -z $COMMAND ]]; then
  echo "Come on! I can do activate, describe, list and delete"
  return 1
fi

case "$COMMAND" in
  describe)
    echo "The current profile is $AWS_PROFILE"
    ;;
  activate)
    if [[ -z $PROFILE ]]; then
      echo "Come on! I can't activate without a profile!"
      return 1
    fi
    access=$(awk -F= '/\[/{prefix=$0; next} $1{$1=$1; print prefix $0}' OFS=' = ' ~/.aws/credentials | egrep "\[$PROFILE\]aws_access_key" | awk -F= '{print $2}' | xargs)
    secret=$(awk -F= '/\[/{prefix=$0; next} $1{$1=$1; print prefix $0}' OFS=' = ' ~/.aws/credentials | egrep "\[$PROFILE\]aws_secret_access_key" | awk -F= '{print $2}' | xargs)
    export AWS_PROFILE=$PROFILE
    export AWS_ACCESS_KEY_ID=$access
    export AWS_SECRET_ACCESS_KEY=$secret
    account=$(aws iam get-user | jq -r .User.Arn | grep -Eo '\d{12}')
    echo "Activating the $PROFILE profile, for account $account"
    ;;
  deactivate)
    echo "Deactivating the $AWS_PROFILE profile"
    unset AWS_PROFILE
    unset AWS_ACCESS_KEY_ID
    unset AWS_SECRET_ACCESS_KEY
    ;;
  list)
    echo "Looking for profiles in $HOME/.aws"
    cat $HOME/.aws/config | grep 'profile\s'
    ;;
  *)
    echo "Come on! I can do activate, describe, list and deactivate"
    ;;
esac
}
